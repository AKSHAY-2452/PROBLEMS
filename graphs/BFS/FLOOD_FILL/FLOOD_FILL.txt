class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n = image.size();
        int m = image[0].size();
        
        //given parameters
        int incolor = image[sr][sc];
        if(incolor == color) return image;
        image[sr][sc] = color;
        
        // queue structure {r,c}
        queue<pair<int,int>> q;
        q.push({sr,sc});
        
        //BFS
        vector<int> drow = {-1,0,1,0};
        vector<int> dcol = {0,1,0,-1};
        while(!q.empty()){
            int cr = q.front().first;// current row
            int cc = q.front().second;
            
            q.pop();
            for(int i = 0;i<4;i++){
                int nr = cr+drow[i];
                int nc = cc+dcol[i];
                if(nr>=0 && nc>=0 && nr<n && nc<m && image[nr][nc] == incolor){
                    image[nr][nc] = color;
                    q.push({nr,nc});
                }
            }
        }
        
        return image;
    }
};